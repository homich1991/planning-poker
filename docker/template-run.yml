apiVersion: v1
kind: Template
metadata:
  name: planningpoker-template
  annotations:
    description: "planningpoker service"
    openshift.io/display-name: planningpoker service
    tags: "planningpoker"
labels:
  template: planningpoker-template

parameters:
  - name: MH_BASE_NAME
    description: The name for the deployment, service and route
    value: planningpoker
  - name: MH_HTTP_PORT
    description: HTTP port for planningpoker
    displayName: HTTP port for planningpoker
    required: true
    value: "80"
  - name: MH_HTTP_INNER_PORT
    description: HTTP inner port for planningpoker
    displayName: HTTP inner port for planningpoker
    required: true
    value: "8080"

objects:
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: planningpoker
        role: planningpoker
      name: ${MH_BASE_NAME}
    spec:
      revisionHistoryLimit: 5
      replicas: 1
      selector:
        app: planningpoker
        role: planningpoker
      strategy:
        activeDeadlineSeconds: 21600
        recreateParams:
          timeoutSeconds: 600
        resources: {}
        type: Recreate
      template:
        metadata:
          labels:
            app: planningpoker
            role: planningpoker
        spec:
          containers:
            - env:
                - name: MH_API_BIND_ADDR
                  value: "0.0.0.0:8080"
                - name: MH_UI_BIND_ADDR
                  value: "0.0.0.0:8080"
              image: 'artifactory.epam.com:6073/com.homich.planningpoker:1.0'
              imagePullPolicy: Always
              livenessProbe:
                failureThreshold: 3
                httpGet:
                  path: /
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 5
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
              name: planningpoker
              ports:
                - containerPort: 8080
                  protocol: TCP
              resources: {}
              securityContext: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          securityContext: {}
          terminationGracePeriodSeconds: 30
      triggers:
        - type: ConfigChange

  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: Exposes the planningpoker ports
      labels:
        app: planningpoker
        role: planningpoker
      name: ${MH_BASE_NAME}
    spec:
      ports:
        - name: http
          port: ${{MH_HTTP_PORT}}
          protocol: TCP
          targetPort: ${{MH_HTTP_INNER_PORT}}
      selector:
        app: planningpoker
        role: planningpoker
      sessionAffinity: None
      type: ClusterIP
